name: Build

on:
  push:
    branches: [ master ]

env:
  BUILD_TYPE: Release

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
      
    - name: Upload Binaries
      uses: actions/upload-artifact@v2
      with:
        path: ${{github.workspace}}/build/out/*
        
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
      
    - name: Upload Binaries
      uses: actions/upload-artifact@v2
      with:
        path: ${{github.workspace}}/build/out/*

  build-osx:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
      
    - name: Upload Binaries
      uses: actions/upload-artifact@v2
      with:
        path: ${{github.workspace}}/build/out/*
        
  deploy:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-osx]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: ${{github.workspace}}/build/out

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: '5.0.x'

    - name: Pack
      run: |
        cd src/wrapper/csharp
        dotnet pack -c Release

    - name: Upload .nupkg
      uses: actions/upload-artifact@v2
      with:
        path: ${{github.workspace}}/src/wrapper/csharp/bin/**/*.nupkg

    - name: Publish on version change
      uses: rohith/publish-nuget@v2
      with:
        PROJECT_FILE_PATH: src/wrapper/csharp/TinyParserMitsuba.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}

language: cpp
jobs:
  include:
#Linux
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-10
      env:
        - MATRIX_EVAL="CC=gcc-10 && CXX=g++-10"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-7.0
          packages:
            - clang-7.0
      env:
        - MATRIX_EVAL="CC=clang-7.0 && CXX=clang++-7.0"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-8.0
          packages:
            - clang-8.0
      env:
        - MATRIX_EVAL="CC=clang-8.0 && CXX=clang++-8.0"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-9.0
          packages:
            - clang-9.0
      env:
        - MATRIX_EVAL="CC=clang-9.0 && CXX=clang++-9.0"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-10.0
          packages:
            - clang-10.0
      env:
        - MATRIX_EVAL="CC=clang-10.0 && CXX=clang++-10.0"

# Macos
    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc5 && CC=gcc-5 && CXX=g++-5"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc6 && CC=gcc-6 && CXX=g++-6"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc && CC=gcc-7 && CXX=g++-7"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc && CC=gcc-8 && CXX=g++-8"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc && CC=gcc-9 && CXX=g++-9"

    - os: osx
      osx_image: xcode11.2

    - os: osx
      osx_image: xcode10.1
    
    - os: osx
      osx_image: xcode9.4


before_install:
    - eval "${MATRIX_EVAL}"
    
env:
  global:
    - CXXFLAGS="-Wall -Wextra -Werror -Wpedantic"

before_script:
  - $CXX --version
  - cmake --version
  - mkdir build
  - cd build
  - if [ $USE_COVERAGE == ON ]; then lcov --directory . --zerocounters; fi
  - cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Debug  ..
script:
  - ninja
after_success:
  - ctest --output-on-failure
  - if [ $USE_COVERAGE == ON ]; then ninja coveralls; fi
notifications:
  email: false
